from rest_framework import viewsets

from ..models import {{camel_case_app_name}}
from ..serializers.{{app_name}} import {{camel_case_app_name}}Serializer


class {{camel_case_app_name}}ViewSet(viewsets.ModelViewSet):
    queryset = {{camel_case_app_name}}.objects.all()
    serializer_class = {{camel_case_app_name}}Serializer

    # for swagger tag
    tags = ['{{camel_case_app_name}}']

    @swagger_auto_schema(
        tags=tags
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def retrieve(self, request, pk=None, **kwargs):
        return super().retrieve(request, pk=None, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def destroy(self, request, pk=None, **kwargs):
        return super().destroy(request, pk=None, **kwargs)


{{app_name}}_list = {{camel_case_app_name}}ViewSet.as_view({'get': 'list', 'post': 'create'})
{{app_name}}_detail = {{camel_case_app_name}}ViewSet.as_view({'get': 'retrieve', 'post': 'update', 'delete': 'destroy'})
