from rest_framework import viewsets
from rest_framework import serializers
from django_filters import rest_framework as filters

from ..models import {{camel_case_app_name}}
from ..serializers.{{app_name}} import {{camel_case_app_name}}Serializer


class {{camel_case_app_name}}ViewSet(viewsets.ModelViewSet):

    class {{camel_case_app_name}}Filter(filters.FilterSet):
        id = filters.NumberFilter(field_name='id')
        title = filters.CharFilter(field_name='title')

        class Meta:
            model = {{camel_case_app_name}}
            fields = ['id']

    class {{camel_case_app_name}}FilterSerializer(serializers.Serializer):
        id = serializers.IntegerField(required=False)
        title = serializers.CharField(required=False)

    class {{camel_case_app_name}}ListOutputSerializer(serializers.ModelSerializer):
        class Meta:
            model = {{camel_case_app_name}}
            fields = '__all__'

    class {{camel_case_app_name}}DetailOutputSerializer(serializers.ModelSerializer):
        class Meta:
            model = {{camel_case_app_name}}
            fields = '__all__'

    queryset = {{camel_case_app_name}}.objects.all()
    serializer_class = {{camel_case_app_name}}ListOutputSerializer

    # for swagger tag
    tags = ['{{camel_case_app_name}}']

    @swagger_auto_schema(
        tags=tags
    )
    def list(self, request, *args, **kwargs):
        return super().list(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def create(self, request, *args, **kwargs):
        return super().create(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def retrieve(self, request, pk=None, **kwargs):
        return super().retrieve(request, pk=None, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def update(self, request, *args, **kwargs):
        return super().update(request, *args, **kwargs)

    @swagger_auto_schema(
        tags=tags
    )
    def destroy(self, request, pk=None, **kwargs):
        return super().destroy(request, pk=None, **kwargs)


{{app_name}}_list = {{camel_case_app_name}}ViewSet.as_view({'get': 'list', 'post': 'create'})
{{app_name}}_detail = {{camel_case_app_name}}ViewSet.as_view({'get': 'retrieve', 'post': 'update', 'delete': 'destroy'})
